const players = {}

module.exports = function (io, socket, connectedSockets) {
    players[socket.roomId] = players[socket.roomId] || [{gameStarted: false}];

    //–ü–æ–¥—ñ—è –¥–ª—è —Ä–æ–∑—Å—Ç–∞–≤–ª–µ–Ω–Ω—è –∫–æ—Ä–∞–±–ª—ñ–≤
    socket.on('ships:arrange', ({ ships }) => {
        //–ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å–∏ –≥—Ä–∞–≤—Ü—è —Ç–∞ –æ–ø–æ–ø–Ω–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ –≥—Ä–∞–≤—Ü—ñ–≤ –¥–∞–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏
        let myIndex = players[socket.roomId].findIndex(player => player.id === socket.id);
        let enemyIndex = players[socket.roomId].findIndex(player => player.id !== socket.id && !player.hasOwnProperty("gameStarted"));

        //–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≥—Ä–∞–≤–µ—Ü—å –≥–æ—Ç–æ–≤–∏–π –¥–æ –≥—Ä–∏ –∞–±–æ –≥—Ä–∞ —Ä–æ–∑–ø–æ—á–∞—Ç–∞ (–¥–æ–∫–∏ –≤—ñ–Ω –≥–æ—Ç–æ–≤–∏–π –∞–±–æ –≥—Ä–∞ —Ä–æ–∑–ø–æ—á–∞—Ç–∞, –≤—ñ–Ω –Ω–µ –º–æ–∂–µ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –ø–æ–ª–æ–∂–µ–Ω–Ω—è —Å–≤–æ—ó –∫–æ—Ä–∞–±–ª—ñ–≤)
        if (myIndex !== -1 && (players[socket.roomId][myIndex].ready || players[socket.roomId][0].gameStarted)) {
            socket.emit('error', '‚ùóYou cannot place ships when you are ready');
            return;
        }

        //–Ø–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å —î –≤ —Å–ø–∏—Å–∫—É –¥–∞–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏, –∑–∞–º—ñ–Ω—è—î–º–æ –Ω–∞ –Ω–æ–≤—ñ
        if (myIndex !== -1) players[socket.roomId][myIndex] = { id: socket.id, ships, enemySunkenShips: [], mySunkenShips: [], myMisses: [], enemyMisses: [], ready: false, move: false};
            
        //–Ü–Ω–∞–∫—à–µ –¥–æ–¥–∞—î–º–æ –≥—Ä–∞–≤—Ü—è –¥–æ –º–∞—Å–∏–≤—É
        else players[socket.roomId].push({ id: socket.id, ships, enemySunkenShips: [], mySunkenShips: [], myMisses: [], enemyMisses: [], ready: false, move: false });

        //–ó–Ω–æ–≤—É –≤–∏–∑–Ω–∞—á–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å –≥—Ä–∞–≤—Ü—è –≤ –º–∞—Å–∏–≤—ñ –≥—Ä–∞–≤—Ü—ñ–≤ –¥–∞–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏
        myIndex = players[socket.roomId].findIndex(player => player.id === socket.id);

        //–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –Ω–∞ front-end
        socket.emit('update', { player: players[socket.roomId][myIndex], gameStarted: players[socket.roomId][0].gameStarted });
        if (enemyIndex !== -1) connectedSockets.filter(connSocket => connSocket.id === players[socket.roomId][enemyIndex]?.id)[0].emit('update', { player: players[socket.roomId][enemyIndex], gameStarted: players[socket.roomId][0].gameStarted });
    });

    //–ü–æ–¥—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –≥—Ä–∞–≤—Ü—è –¥–æ –≥—Ä–∏
    socket.on('player:ready', () => {
        //–ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å–∏ –≥—Ä–∞–≤—Ü—è —Ç–∞ –æ–ø–æ–ø–Ω–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ –≥—Ä–∞–≤—Ü—ñ–≤ –¥–∞–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏
        let myIndex = players[socket.roomId].findIndex(player => player.id === socket.id && !player.hasOwnProperty("gameStarted"));
        let enemyIndex = players[socket.roomId].findIndex(player => player.id !== socket.id && !player.hasOwnProperty("gameStarted"));

        //–ó–º—ñ–Ω—é—î–º–æ —Å—Ç–∞—Ç—É—Å –≥—Ä–∞–≤—Ü—è, —á–∏ –≤—ñ–Ω –≥–æ—Ç–æ–≤–∏–π –¥–æ –≥—Ä–∏
        if (myIndex !== -1) {
            players[socket.roomId][myIndex].ready = !players[socket.roomId][myIndex].ready;
            socket.emit('ready', players[socket.roomId][myIndex].ready);
        }
        else {
            socket.emit('error', '‚ùóYou cannot be ready without placing ships');
            return;
        }
        if (enemyIndex !== -1 && players[socket.roomId][enemyIndex].ready && players[socket.roomId][myIndex].ready) io.to(socket.roomId).emit('start:game', 'Start the game');
    })

    //–ü–æ–¥—ñ—è –¥–ª—è –ø–æ—á–∞—Ç–∫—É –≥—Ä–∏
    socket.on('game:start', () => {
        if (players[socket.roomId].length < 3) {
            socket.emit('error', '‚ùóCannot start the game, enemy did not placed ships');
            return;
        }

        //–ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å–∏ –≥—Ä–∞–≤—Ü—è —Ç–∞ –æ–ø–æ–ø–Ω–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ –≥—Ä–∞–≤—Ü—ñ–≤ –¥–∞–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏
        let myIndex = players[socket.roomId].findIndex(player => player.id === socket.id && !player.hasOwnProperty("gameStarted"));
        let enemyIndex = players[socket.roomId].findIndex(player => player.id !== socket.id && !player.hasOwnProperty("gameStarted"));

        //–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≥—Ä–∞–≤—Ü—ñ –≥–æ—Ç–æ–≤—ñ –¥–æ –≥—Ä–∏
        if (players[socket.roomId][enemyIndex].ready && players[socket.roomId][myIndex].ready) {
            //–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –≥—Ä–∞–≤—Ü—è, —è–∫–æ–º—É –Ω–∞–¥–∞—î—Ç—å—Å—è –ø—Ä–∞–≤–æ –ø–æ—Å—Ç—Ä—ñ–ª—É —Ç–∞ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –π–æ–º—É –ø—Ä–æ —Ü–µ
            players[socket.roomId][1].move = true;
            players[socket.roomId][0].gameStarted = true;
        } else {
            socket.emit('error', '‚ùóCannot start the game, you or enemy is not ready');
            return;
        }

        //–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –Ω–∞ front-end
        socket.emit('update', { player: players[socket.roomId][myIndex], gameStarted: players[socket.roomId][0].gameStarted });
        connectedSockets.filter(connSocket => connSocket.id === players[socket.roomId][enemyIndex].id)[0].emit('update', { player: players[socket.roomId][enemyIndex], gameStarted: players[socket.roomId][0].gameStarted });
    });

    //–ü–æ–¥—ñ—è –¥–ª—è –ø–æ—Å—Ç—Ä—ñ–ª—É
    socket.on('shot', ({ coords }) => {
        //–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≥—Ä–∞ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—å
        if (!players[socket.roomId][0].gameStarted) {
            //–Ø–∫—â–æ –Ω—ñ, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è-–ø–æ–º–∏–ª–∫—É, —â–æ –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–∫–æ–Ω–∞—Ç–∏ –ø–æ—Å—Ç—Ä—ñ–ª –¥–æ–∫–∏ –≥—Ä–∞ –Ω–µ —Ä–æ–∑–ø–æ—á–∞—Ç–∞
            socket.emit('error', '‚ùóYou cannot shot when game is not started');
            return;
        }

        //–ü–µ—Ä–µ–≤—ñ—Ä—î–º–æ —á–∏ –æ–ø–æ–Ω–µ–Ω—Ç —Ä–æ–∑—Å—Ç–∞–≤–∏–≤ –∫–æ—Ä–∞–±–ª—ñ
        if (players[socket.roomId].length === 2) {
            //–Ø–∫—â–æ —Ç–∞–∫, –≤–∏–∫–ª–∫–∏–∞—î–º–æ –ø–æ–¥—ñ—é error —É –∫–ª—ñ—î–Ω—Ç–∞, —Ç–∞ –ø–µ—Ä–µ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –æ–ø–æ–Ω–µ–Ω—Ç —â–µ –Ω–µ —Ä–æ–∑—Å—Ç–∞–≤–∏–≤ —Å–≤–æ—ó –∫–æ—Ä–∞–±–ª—ñ
            socket.emit('error', '‚ùóEnemy did not placed ships on field');
            return;
        };
        
        //–ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å–∏ –≥—Ä–∞–≤—Ü—è —Ç–∞ –æ–ø–æ–ø–Ω–µ–Ω—Ç–∞ –≤ –º–∞—Å–∏–≤—ñ –≥—Ä–∞–≤—Ü—ñ–≤ –¥–∞–Ω–æ—ó –∫—ñ–º–Ω–∞—Ç–∏
        let enemyIndex = players[socket.roomId].findIndex(player => player.id !== socket.id && !player.hasOwnProperty("gameStarted"));
        let myIndex = players[socket.roomId].findIndex(player => player.id === socket.id && !player.hasOwnProperty("gameStarted"));

        //–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≥—Ä–∞–≤–µ—Ü—å –º–∞—î –ø—Ä–∞–≤–æ –ø–æ—Å—Ç—Ä—ñ–ª—É
        if (!players[socket.roomId][myIndex].move) {
            socket.emit('error', '‚ùóNot your move');
            return;
        }

        //–ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –Ω–∞ —è–∫–∏—Ö –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∫–æ—Ä–∞–±–µ–ª—å (–∞–±–æ –π–æ–≥–æ —á–∞—Å—Ç–∏–Ω–∞)
        let sunkenShipIndex = players[socket.roomId][enemyIndex].ships.findIndex(shipCoords => JSON.stringify(shipCoords) === JSON.stringify(coords));

        //–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —ñ—Å–Ω—É—î —Ü–µ–π —ñ–Ω–¥–µ–∫—Å
        if (sunkenShipIndex !== -1) {
            //–Ø–∫—â–æ —ñ—Å–Ω—É—î –¥–æ–¥–∞—î–º–æ –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ–ø–ª–µ–Ω–∏—Ö –∫–æ—Ä–∞–±–ª—ñ–≤, —Ç–∞ –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –π–æ–≥–æ –∑ –º–∞—Å–∏–≤—É –∫–æ—Ä–∞–±–ª—ñ–≤
            players[socket.roomId][enemyIndex].mySunkenShips.push(coords);
            players[socket.roomId][myIndex].enemySunkenShips.push(coords);
            players[socket.roomId][enemyIndex].ships = players[socket.roomId][enemyIndex].ships.filter(shipCell => JSON.stringify(shipCell) !== JSON.stringify(coords));
            
        } else {
            players[socket.roomId][myIndex].myMisses.push(coords);
            players[socket.roomId][enemyIndex].enemyMisses.push(coords);
            
            //–ó–∞–º—ñ–Ω—é—î–º–æ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –ø–æ—Å—Ç—Ä—ñ–ª —É –≥—Ä–∞–≤—Ü—ñ–≤
            players[socket.roomId][myIndex].move = false;
            players[socket.roomId][enemyIndex].move = true;
        }
        //–û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –Ω–∞ front-end
        socket.emit('update', { player: players[socket.roomId][myIndex], gameStarted: players[socket.roomId][0].gameStarted });
        connectedSockets.filter(connSocket => connSocket.id === players[socket.roomId][enemyIndex].id)[0].emit('update', { player: players[socket.roomId][enemyIndex], gameStarted: players[socket.roomId][0].gameStarted });
        
        //–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≥—Ä–∞–≤–µ—Ü—å –ø–æ—Ç–æ–ø–∏–≤ –≤—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –æ–ø–æ–Ω–µ–Ω—Ç–∞, —è–∫—â–æ —Ç–∞–∫, –≤–∏–∫–æ–Ω–∞—Ç–∏ –ø–æ–¥—ñ—é winner —É –ø–µ—Ä–µ–º–æ–∂—Ü—è —Ç–∞ loser —É –ø—Ä–æ–≥—Ä–∞–≤—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è
        if (!players[socket.roomId][enemyIndex].ships.length) {
            socket.emit('winner', 'You are the winner! üéâ');
            connectedSockets.filter(connSocket => connSocket.id === players[socket.roomId][enemyIndex].id)[0].emit('loser', 'You are losed the game!');
            players[socket.roomId] = [{ gameStarted: false }];
            return;
        }
    });
    /* –ü–æ–¥—ñ—ó —è–∫—ñ —Å–ª—É—Ö–∞—î front-end —Ç–∞ —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä–æ–±–∏—Ç–∏ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø–µ—Ä–µ–¥–∞–Ω–æ—é –≤—ñ–¥ back-end:
        * error - –í–∏–≤–æ–¥–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –ø–æ–º–∏–ª–∫—É —è–∫–∞ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —É —Ñ–æ—Ä–º–∞—Ç—ñ —Ç–µ–∫—Å—Ç—É —Ç–∞ –±–ª–æ–∫—É–≤–∞—Ç–∏ –¥—ñ—é, —è–∫—É –≤—ñ–Ω —Ö–æ—Ç—ñ–≤ –∑—Ä–æ–±–∏—Ç–∏
        * ready - –û—Ç—Ä–∏–º–∞–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–æ –≥—Ä–∏
        * start:game - –Ø–∫—â–æ –≤–∏–∫–ª–∏–∫–∞–Ω–∞, –≤–∏–∫–ª–∏–∫–∞—Ç–∏ –ø–æ–¥—ñ—é –Ω–∞ back-end "game:start"
        * update - –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ —Å—Ö–æ–≤–∏—â–µ —Ç–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ó—ó
        * winner - –Ø–∫—â–æ –≤–∏–∫–ª–∏–∫–∞–Ω–∞, –≤–∏–≤–µ—Å—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —â–æ –≥—Ä–∞–≤–µ—Ü—å –ø–µ—Ä–µ–º—ñ–≥
        * loser - –Ø–∫—â–æ –≤–∏–∫–ª–∏–∫–∞–Ω–∞, –≤–∏–≤–µ—Å—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —â–æ –≥—Ä–∞–≤–µ—Ü—å –ø—Ä–æ–≥—Ä–∞–≤
    */
    /* –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –ø–æ–¥—ñ–π –Ω–∞ front-end:
        * ships:arrange -> player:ready -> game:start (—è–∫—â–æ –≤–∏–∫–æ–Ω–∞–ª–∞—Å—å –ø–æ–¥—ñ—è start:game) -> shot
    */
    /* –ü—Ä–∏–º—ñ—Ç–∫–∞ (–ø–æ–ª—è –æ–±'—î–∫—Ç–∞ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó, —Ç–∞ —â–æ –≤–æ–Ω–∏ –æ–∑–Ω–∞—á–∞—é—Ç—å):
        * id - ID —Å–æ–∫–µ—Ç–∞
        * ships - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∫–æ—Ä–∞–±–ª—ñ–≤ –≥—Ä–∞–≤—Ü—è
        * enemySunkenShips - –∫–æ—Ä–∞–±–ª—ñ, —è–∫—ñ –ø–æ—Ç–æ–ø–∏–≤ –≥—Ä–∞–≤–µ—Ü—å —É —Å–≤–æ–≥–æ –æ–ø–æ–Ω–µ–Ω—Ç–∞
        * mySunkenShips - –∫–æ—Ä–∞–±–ª—ñ, —è–∫—ñ –ø–æ—Ç–æ–ø–ª–µ–Ω—ñ —É –≥—Ä–∞–≤—Ü—è –æ–ø–æ–Ω–µ–Ω—Ç–æ–º
        * myMisses - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∫–ª—ñ—Ç–∏–Ω–æ–∫, –≤ —è–∫—ñ –≥—Ä–∞–≤–µ—Ü—å –∑–¥—ñ–π—Å–Ω–∏–≤ –ø–æ—Å—Ç—Ä—ñ–ª, –ø—Ä–æ—Ç–µ —Ç–∞–º –Ω–µ –±—É–ª–æ –∫–æ—Ä–∞–±–ª—è (–∫–ª—ñ—Ç–∏–Ω–∫–∞ miss)
        * enemyMisses - –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏ –∫–ª—ñ—Ç–∏–Ω–æ–∫, –≤ —è–∫—ñ –æ–ø–æ–Ω–µ–Ω—Ç –∑–¥—ñ–π—Å–Ω–∏–≤ –ø–æ—Å—Ç—Ä—ñ–ª, –ø—Ä–æ—Ç–µ —Ç–∞–º –Ω–µ –±—É–ª–æ –∫–æ—Ä–∞–±–ª—è (–∫–ª—ñ—Ç–∏–Ω–∫–∞ miss)
        * ready - –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å –≥—Ä–∞–≤—Ü—è
        * move - —á–∏ –π–æ–≥–æ —á–µ—Ä–≥–∞ –∑–¥—ñ–π—Å–Ω–∏—Ç–∏ –ø–æ—Å—Ç—Ä—ñ–ª (—è–∫—â–æ false - –∑–∞–±–æ—Ä–æ–Ω–∏—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–∞—Ç–∏—Å–∫–∞—Ç–∏ –Ω–∞ –∫–ª—ñ—Ç–∏–Ω–∫–∏ –¥–ª—è –∑–¥—ñ–π—Å–Ω–µ–Ω–Ω—è –ø–æ—Å—Ç—Ä—ñ–ª—É)
        * gameStarted - –∑–Ω–∞—á–µ–Ω–Ω—è —á–∏ —Ä–æ–∑–ø–æ—á–∞—Ç–∞ –≥—Ä–∞
    */
}